{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIsFocusVisible;\nexports.teardown = teardown;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\n\n\nlet hadKeyboardEvent = true;\nlet hadFocusVisibleRecently = false;\nlet hadFocusVisibleRecentlyTimeout;\nconst inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @returns {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  const {\n    type,\n    tagName\n  } = node;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  const {\n    target\n  } = event;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {// Browsers not implementing :focus-visible will throw a SyntaxError.\n    // We use our own heuristic for those browsers.\n    // Rethrow might be better if it's not the expected error but do we really\n    // want to crash if focus-visible malfunctioned?\n  } // No need for validFocusTarget check. The user does that by attaching it to\n  // focusable events only.\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n\nfunction useIsFocusVisible() {\n  const ref = React.useCallback(node => {\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  const isFocusVisibleRef = React.useRef(false);\n  /**\n   * Should be called if a blur event is fired\n   */\n\n  function handleBlurVisible() {\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\n    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\n    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\n    if (isFocusVisibleRef.current) {\n      // To detect a tab/window switch, we look for a blur event followed\n      // rapidly by a visibility change.\n      // If we don't see a visibility change within 100ms, it's probably a\n      // regular focus change.\n      hadFocusVisibleRecently = true;\n      window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {\n        hadFocusVisibleRecently = false;\n      }, 100);\n      isFocusVisibleRef.current = false;\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Should be called if a blur event is fired\n   */\n\n\n  function handleFocusVisible(event) {\n    if (isFocusVisible(event)) {\n      isFocusVisibleRef.current = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  return {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","useIsFocusVisible","teardown","React","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","focusTriggersKeyboardModality","node","type","tagName","readOnly","isContentEditable","handleKeyDown","event","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","visibilityState","prepare","doc","addEventListener","removeEventListener","isFocusVisible","target","matches","error","ref","useCallback","ownerDocument","isFocusVisibleRef","useRef","handleBlurVisible","current","window","clearTimeout","setTimeout","handleFocusVisible","onFocus","onBlur"],"sources":["C:/Users/rudra/Documents/original_website/The-Weirdos-NFT-Website-Starter-Code/node_modules/@mui/utils/useIsFocusVisible.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIsFocusVisible;\nexports.teardown = teardown;\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\n\nlet hadKeyboardEvent = true;\nlet hadFocusVisibleRecently = false;\nlet hadFocusVisibleRecentlyTimeout;\nconst inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @returns {boolean}\n */\nfunction focusTriggersKeyboardModality(node) {\n  const {\n    type,\n    tagName\n  } = node;\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n  if (node.isContentEditable) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  hadKeyboardEvent = true;\n}\n\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\nfunction teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\nfunction isFocusVisible(event) {\n  const {\n    target\n  } = event;\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {\n    // Browsers not implementing :focus-visible will throw a SyntaxError.\n    // We use our own heuristic for those browsers.\n    // Rethrow might be better if it's not the expected error but do we really\n    // want to crash if focus-visible malfunctioned?\n  }\n\n  // No need for validFocusTarget check. The user does that by attaching it to\n  // focusable events only.\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\nfunction useIsFocusVisible() {\n  const ref = React.useCallback(node => {\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  const isFocusVisibleRef = React.useRef(false);\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleBlurVisible() {\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\n    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\n    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\n    if (isFocusVisibleRef.current) {\n      // To detect a tab/window switch, we look for a blur event followed\n      // rapidly by a visibility change.\n      // If we don't see a visibility change within 100ms, it's probably a\n      // regular focus change.\n      hadFocusVisibleRecently = true;\n      window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {\n        hadFocusVisibleRecently = false;\n      }, 100);\n      isFocusVisibleRef.current = false;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleFocusVisible(event) {\n    if (isFocusVisible(event)) {\n      isFocusVisibleRef.current = true;\n      return true;\n    }\n    return false;\n  }\n  return {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}