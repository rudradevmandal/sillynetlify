{"ast":null,"code":"/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value);\n  let index = source.indexOf(substring);\n  let expected = index;\n  let count = 0;\n  let max = 0;\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring');\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count;\n      }\n    } else {\n      count = 1;\n    }\n\n    expected = index + substring.length;\n    index = source.indexOf(substring, expected);\n  }\n\n  return max;\n}","map":{"version":3,"names":["longestStreak","value","substring","source","String","index","indexOf","expected","count","max","TypeError","length"],"sources":["C:/Users/rudra/Documents/original_website/The-Weirdos-NFT-Website-Starter-Code/node_modules/longest-streak/index.js"],"sourcesContent":["/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,SAA9B,EAAyC;EAC9C,MAAMC,MAAM,GAAGC,MAAM,CAACH,KAAD,CAArB;EACA,IAAII,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeJ,SAAf,CAAZ;EACA,IAAIK,QAAQ,GAAGF,KAAf;EACA,IAAIG,KAAK,GAAG,CAAZ;EACA,IAAIC,GAAG,GAAG,CAAV;;EAEA,IAAI,OAAOP,SAAP,KAAqB,QAAzB,EAAmC;IACjC,MAAM,IAAIQ,SAAJ,CAAc,oBAAd,CAAN;EACD;;EAED,OAAOL,KAAK,KAAK,CAAC,CAAlB,EAAqB;IACnB,IAAIA,KAAK,KAAKE,QAAd,EAAwB;MACtB,IAAI,EAAEC,KAAF,GAAUC,GAAd,EAAmB;QACjBA,GAAG,GAAGD,KAAN;MACD;IACF,CAJD,MAIO;MACLA,KAAK,GAAG,CAAR;IACD;;IAEDD,QAAQ,GAAGF,KAAK,GAAGH,SAAS,CAACS,MAA7B;IACAN,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeJ,SAAf,EAA0BK,QAA1B,CAAR;EACD;;EAED,OAAOE,GAAP;AACD"},"metadata":{},"sourceType":"module"}