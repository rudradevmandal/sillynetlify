{"ast":null,"code":"/**\n * @typedef {import('unist').Node} Node\n */\nimport { visit } from 'unist-util-visit';\n/**\n * Utility to remove positions from a tree\n *\n * @param node The unist tree\n * @param force if `force` is given, uses `delete`, otherwise, sets positions to `undefined`.\n * @returns The same node, but either with `position: undefined` or w/o `position` fields\n */\n\nexport const removePosition =\n/**\n * @type {(\n *   (<Tree extends Node>(tree: Tree, force?: false) => Tree) &\n *   (<Tree extends Node>(tree: Tree, force: true) => Tree)\n * )}\n */\n\n/**\n * @template {Node} Tree\n * @param {Tree} node\n * @param {boolean} [force=false]\n * @returns {Tree}\n */\nfunction (node, force) {\n  visit(node, remove); // @ts-ignore hush TS, we know what we’re doing.\n\n  return node;\n  /**\n   * @param {Node} node the unist tree\n   */\n\n  function remove(node) {\n    if (force) {\n      delete node.position;\n    } else {\n      node.position = undefined;\n    }\n  }\n};","map":{"version":3,"names":["visit","removePosition","node","force","remove","position","undefined"],"sources":["C:/Users/rudra/Documents/original_website/The-Weirdos-NFT-Website-Starter-Code/node_modules/unist-util-remove-position/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n */\n\nimport {visit} from 'unist-util-visit'\n\n/**\n * Utility to remove positions from a tree\n *\n * @param node The unist tree\n * @param force if `force` is given, uses `delete`, otherwise, sets positions to `undefined`.\n * @returns The same node, but either with `position: undefined` or w/o `position` fields\n */\nexport const removePosition =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, force?: false) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, force: true) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} node\n     * @param {boolean} [force=false]\n     * @returns {Tree}\n     */\n    function (node, force) {\n      visit(node, remove)\n\n      // @ts-ignore hush TS, we know what we’re doing.\n      return node\n\n      /**\n       * @param {Node} node the unist tree\n       */\n      function remove(node) {\n        if (force) {\n          delete node.position\n        } else {\n          node.position = undefined\n        }\n      }\n    }\n  )\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,KAAR,QAAoB,kBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc;AACzB;AACF;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACI,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;EACrBH,KAAK,CAACE,IAAD,EAAOE,MAAP,CAAL,CADqB,CAGrB;;EACA,OAAOF,IAAP;EAEA;AACN;AACA;;EACM,SAASE,MAAT,CAAgBF,IAAhB,EAAsB;IACpB,IAAIC,KAAJ,EAAW;MACT,OAAOD,IAAI,CAACG,QAAZ;IACD,CAFD,MAEO;MACLH,IAAI,CAACG,QAAL,GAAgBC,SAAhB;IACD;EACF;AACF,CA9BE"},"metadata":{},"sourceType":"module"}